//MaterialProperties.h

#ifndef _MaterialProperties_H_
#define _MaterialProperties_H_

#include "Geometry.h"
#include "Color3.h"
#include "jsoncpp\json.h"

class Material{
public:
	Color3 ambient;
	Color3 diffuse;
	Color3 specular;
	double shininess;
	Color3 reflect;
	Color3 refract;
	double refract_index;
public:
	Material();
	Material(Color3 amb, Color3 dif, Color3 spec, double shininess,
			 Color3 rfl, Color3 rfr, double rfr_ind);
	Material(UINT material_ID);
	Material(Json::Value json);
	
	Material& operator = (const Material& m);
};

/* emerald, jade, obsidian, pearl, ruby, turquoise, brass, bronze, chrome, copper, gold, silver, silver2
   black, cyan, green, red, white, yellow plastic, black, cyan, green, red, white, yellow rubber*/
static double AMBIENT[][4] = {{0.2,0.2,0.2,1.0}, {0.0215,0.1745,0.0215,1.0}, //deault, emerald 0-1
	{0.135,0.2225,0.1575,1.0},{0.05375,0.05,0.06625,1.0}, //jade, obsidian 2-3
	{0.25,0.20725,0.20725,1.0}, {0.1745,0.01175,0.01175,1.0}, //pearl, ruby 4-5
	{0.1,0.18725,0.1745,1.0}, {0.329412,0.223529,0.027451,1.0}, //turquoise, brass 6-7
	{0.2125,0.1275,0.054,1.0}, {0.25,0.25,0.25,1.0}, //bronze, chrome 8-9
	{0.19125,0.0735,0.0225,1.0}, {0.24725,0.1995,0.0745,1.0}, //copper, gold 10-11
	{0.19225,0.19225,0.19225,1.0}, {0.15,0.15,0.15,1.0}, {0.0,0.0,0.0,1.0}, //silver, silver2, black plastic 12-14
	{0.0,0.1,0.06,1.0}, {0.0,0.0,0.0,1.0}, {0.0,0.0,0.0,1.0}, //cyan, green, red plastic 15-17
	{0.2,0.2,0.2,1.0}, {0.0,0.0,0.0,1.0}, {0.02,0.02,0.02,1.0}, //white, yellow plastic, black rubber 18-20
	{0.0,0.05,0.05,1.0}, {0.0,0.05,0.0,1.0}, {0.05,0.0,0.0,1.0}, //cyan, green, red rubber 21-23
	{0.05,0.05,0.05,1.0}, {0.05,0.05,0.0,1.0}}; //yellow rubber 24-25
	
static double DIFFUSE[][4] = {{0.8,0.8,0.8,1.0}, {0.07568,0.61424,0.07568,1.0}, //0-1
	{0.54,0.89,0.63,1.0}, {0.18275,0.17,0.22525,1.0}, //2-3
	{1.0,0.829,0.829,1.0}, {0.61424,0.04136,0.04136,1.0}, //4-5
	{0.396,0.74151,0.69102,1.0}, {0.780392,0.568627,0.113725,1.0}, //6-7
	{0.714,0.4284,0.18144,1.0}, {0.4,0.4,0.4,1.0}, //8-9
	{0.7038,0.27048,0.0828,1.0}, {0.74164,0.60648,0.22648,1.0}, //10-11
	{0.50754,0.50754,0.50754,1.0}, {0.50754,0.50754,0.50754,1.0}, {0.01,0.01,0.01,1.0}, //12-14
	{0.0,0.50980392,0.50980392,1.0}, {0.1,0.35,0.1,1.0}, //15-16
	{0.5,0.0,0.0,1.0}, {0.45,0.45,0.45,1.0}, //17-18
	{0.5,0.5,0.0,1.0}, {0.01,0.01,0.01,1.0}, //19-20
	{0.4,0.5,0.5,1.0}, {0.4,0.5,0.4,1.0}, //21-22
	{0.5,0.4,0.4,1.0}, {0.5,0.5,0.5,1.0},{0.5,0.5,0.4,1.0}}; //23-25

static double SPECULAR[][4] = {{0.0,0.0,0.0,1.0}, {0.633,0.727811,0.633,1.0}, //0-1
	{0.316228,0.316228,0.316228,1.0}, {0.332741,0.328634,0.346435,1.0}, //2-3
	{0.296648,0.296648,0.296648,1.0}, {0.727811,0.626959,0.626959,1.0}, //4-5
	{0.297254,0.30829,0.306678,1.0}, {0.992157,0.941176,0.807843,1.0}, //6-7
	{0.393548,0.271906,0.166721,1.0}, {0.774597,0.774597,0.774597,1.0}, //8-9
	{0.256777,0.137622,0.086014,1.0}, {0.628821,0.555802,0.366065,1.0}, //10-11
	{0.508273,0.508273,0.508273,1.0}, {0.508273,0.508273,0.508273,1.0}, {0.5,0.5,0.5,1.0}, //12-14
	{0.50196078,0.50196078,0.50196078,1.0}, {0.45,0.55,0.45,1.0}, //15-16
	{0.7,0.6,0.6,1.0}, {0.6,0.6,0.6,1.0}, //17-18
	{0.6,0.6,0.5,1.0}, {0.4,0.4,0.4,1.0}, //19-20
	{0.04,0.7,0.7,1.0}, {0.04,0.7,0.04,1.0}, //21-22
	{0.7,0.04,0.04,1.0}, {0.7,0.7,0.7,1.0},{0.7,0.7,0.04,1.0}}; //23-25

static double SHININESS[] = {0.0, 0.6, 0.1, 0.3, 0.088, 0.6, 0.1, //0-6
	0.21794872, 0.2, 0.6, 0.1, 0.4, 0.4, 0.4, 0.25, 0.25, 0.25, 0.25, 0.25, //7-18
	0.25, 0.078125, 0.078125, 0.078125, 0.078125, 0.078125, 0.078125}; //19-25

#endif